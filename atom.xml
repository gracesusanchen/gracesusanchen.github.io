<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Grace S. Chen]]></title>
  <link href="http://gracesusanchen.github.io/atom.xml" rel="self"/>
  <link href="http://gracesusanchen.github.io/"/>
  <updated>2016-04-17T20:49:51+08:00</updated>
  <id>http://gracesusanchen.github.io/</id>
  <author>
    <name><![CDATA[Grace Chen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Collect Wallpapers like a Pro]]></title>
    <link href="http://gracesusanchen.github.io/blog/2016/02/06/how-to-collect-wallpapers-like-a-pro/"/>
    <updated>2016-02-06T14:36:29+08:00</updated>
    <id>http://gracesusanchen.github.io/blog/2016/02/06/how-to-collect-wallpapers-like-a-pro</id>
    <content type="html"><![CDATA[<p>Once in a while, I find my current wallpaper collection lacking&hellip;</p>

<!--more-->


<p>&hellip; and I set out to find a new one.</p>

<p><img src="http://gracesusanchen.github.io/images/201512browsing.jpg"></p>

<p>Half an hour later, I&rsquo;ve finally got a new wallpaper! But that is half an hour more than I meant to spend on this!</p>

<p>And I thought, <em>Wouldn&rsquo;t it be nice to have wallpapers pop up at my proverbial doorstep?</em></p>

<p>With the help of <a href="http://ifttt.com">IFTTT</a>, <a href="http://melloristudio.com/wallch/">wallch</a>, and some bash scripting, I have managed to solve this problem on Ubuntu and Xubuntu.</p>

<h2>How it works</h2>

<p>IFTTT automatically saves updates from my favourite wallpaper sources to my local wallpaper folder. When new images come up in the wallpaper slideshow, I can decide to keep or delete them as I please!</p>

<h2>You will need&hellip;</h2>

<ul>
<li>an <a href="http://ifttt.com">IFTTT</a> account</li>
<li>a <a href="http://dropbox.com">Dropbox</a> account</li>
<li>a list of subreddits (such as <a href="https://www.reddit.com/r/EarthPorn/">/r/earthporn</a>)</li>
</ul>


<h2>Follow these steps</h2>

<p><em>Step 1</em>: Add a folder to your Dropbox for your wallpapers; make sure it is synced to your machine.</p>

<p><em>Step 2</em>: Create your own IFTTT recipes, similar to the one below.</p>

<p><img src="http://gracesusanchen.github.io/images/201512ifttt.png"></p>

<p><em>Step 3</em>: Set your wallpaper rotation folder to your Dropbox folder. (<a href="http://www.switchingtomac.com/tutorials/how-to-rotate-wallpapers-in-osx/">Mac</a>|<a href="http://windows.microsoft.com/en-us/windows7/create-a-desktop-background-slide-show">Win</a>|<a href="http://melloristudio.com/wallch/">Gnome</a>)</p>

<p>And that&rsquo;s it!</p>

<h2>Managing Wallpapers</h2>

<p>Once I had this system up and running, I quickly amassed many, many wallpapers. They become slightly problematic to organize with only system tools. (Loading thousands of HD wallpaper thumbnails is slow, to say the least.)</p>

<p>For removal of duplicates and images that are too small, I use my <a href="https://github.com/gracesusanchen/wallpaper-trimmer">wallpaper-trimmer</a> script.</p>

<h2>Access the Current Wallpaper</h2>

<p>Sometimes, I want to find out where the current wallpaper is located, without having to turn on the desktop settings, because, again, loading thousands of wallpaper thumbnails is sloooow.</p>

<p>Here are a few ways to access the current desktop image path:</p>

<p><em>On Ubuntu</em>: Install <a href="http://melloristudio.com/wallch/">wallch</a>!</p>

<p><em>On Xubuntu</em>: Use <a href="https://github.com/gracesusanchen/current-xfce-desktop/">this script</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding separators to a Collection using Marionette]]></title>
    <link href="http://gracesusanchen.github.io/blog/2015/11/21/adding-separators-to-maionette-collectionviews/"/>
    <updated>2015-11-21T11:21:05+08:00</updated>
    <id>http://gracesusanchen.github.io/blog/2015/11/21/adding-separators-to-maionette-collectionviews</id>
    <content type="html"><![CDATA[<p><a href="https://www.google.com/design/spec/components/dividers.html#dividers-specs">Separators, or dividers,</a> can make content more accessible by spacing it out.</p>

<!-- More -->


<p>While Backbone.Marionette is ideal for rendering a collection of identical views, it is not as easy to insert separators between these. This post will describe how to add separators between ItemViews.</p>

<h2>The Goal</h2>

<p>We want a collection which can be sorted by different attributes, and which uses corresponding separators depending on the current sort order.</p>

<p>As new items are inserted into the collection, the separator position will remain accurate.</p>

<p>View the demo <a href="http://plnkr.co/t1TVR2D93mZDKMo9buXT">here</a>.</p>

<h2>Background: the CollectionView Lifecycle</h2>

<p>The Marionette library defines the <a href="http://benmccormick.org/2015/01/05/marionette-view-life-cycles/">lifecycle and triggers</a> for each view types. Below is a simplified diagram of the lifecycle of a CollectionView.</p>

<p><img src="http://gracesusanchen.github.io/images/201511Lifecycle.png"></p>

<p>The CollectionView has a <em>buffering mechanism</em>; ChildViews HTML strings are buffered until all children are &ldquo;rendered&rdquo; as strings.</p>

<p>When the entire CollectionView HTML string is ready, the buffer is attached to the DOM in one go. This makes collection rendering much more efficient.</p>

<h2>Walkthrough</h2>

<p>We will do separator-related operations in the following three stages of the view&rsquo;s lifecycle.</p>

<ul>
<li><code>onAddChild</code>: This method is triggered when a new ItemView is rendered and added to the buffer.</li>
</ul>


<script src="https://gist.github.com/gracesusanchen/d755b1c01b60543db8cf.js?file=collectionView.onAddChild.js"></script>


<ul>
<li><code>onRender</code>: This method is triggered after the CollectionView is attached to the DOM.</li>
</ul>


<script src="https://gist.github.com/gracesusanchen/d755b1c01b60543db8cf.js?file=collectionView.onRender.js"></script>


<ul>
<li><code>onBeforeRender</code>: This method is triggered before the CollectionView begins rendering.</li>
</ul>


<script src="https://gist.github.com/gracesusanchen/d755b1c01b60543db8cf.js?file=collectionView.onBeforeRender.js"></script>


<h2>Caveats</h2>

<p>To use the method described above, the CollectionView must be re-rendered on sort. Hence, the <code>reorderOnSort</code> option has be <code>false</code>, and this will have a slight impact on your rendering performance.</p>

<p>If your collection view will not be filtered or sorted, then it may be worth adding your separator logic to your models, and only update the models on <code>add</code> or <code>remove</code> events.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MOPCON 2015]]></title>
    <link href="http://gracesusanchen.github.io/blog/2015/11/08/mopcon-2015/"/>
    <updated>2015-11-08T17:55:56+08:00</updated>
    <id>http://gracesusanchen.github.io/blog/2015/11/08/mopcon-2015</id>
    <content type="html"><![CDATA[<p>經過了一個禮拜的沈澱，終於來寫 MOPCON 心得文囉～</p>

<!-- More -->


<p>這次會參與 MOPCON 志工，主要是因為去年當會眾時真的很熱血沸騰～而且拖前同事凍仁的福順利加入～</p>

<h2>會前準備：</h2>

<ul>
<li>議程組的工作主要就是發信給講者，催繳資料，行前確認，官網資料更新與最後的主持工作。</li>
<li>議程組裡最辛苦的絕對是凍仁組長了～雖然要做的事情都寫在 Trello 上，但最終大家都是等組長指示行動。我不知道留下今年的文件，對明年的議程組有沒有幫助，不過看起來辦活動是沒有 SOP 的。不知道有沒有什麼辦法可以把整理工作項目，與其他組長協調等等工作分配出去。</li>
<li>發信給講者其實挺有趣的，因為英文專長分配到的下野回信超認真準時，合作愉快～（雖然他一直叫我 Mr. Grace orz）</li>
</ul>


<h2>會議當天：</h2>

<ul>
<li><p>很讚的：</p>

<ol>
<li>每一廳主持人安排兩位真的比較有壯膽效果啦～可以應付各種狀況，還有幫忙遞麥克風。</li>
<li>閃電秀數量安排剛剛好，很快被搶完超有 fu :D</li>
<li>Slack 頗好用，馬上知道有什麼需要宣導。</li>
</ol>
</li>
<li><p>可改進的：</p>

<ol>
<li>主持人可以更了解講者，或者與講者事先串好招。

<blockquote><p>部份講者的簡報中，有部份是自我介紹。可以再上台前，或者報到時確認是否需要協助介紹。如果有需要，也可以先與講者溝通好，需要介紹什麼重點。當然最美好的情況是主持人跟講者很熟～</p></blockquote></li>
<li>主持人可宣傳 HackPad 用法：

<blockquote><p>這次幫忙在 HackPad 上即時寫筆記，發現雖然登錄的人很多，但寫筆記速度不快。一問之下，才發現原來很多人不是不想做筆記，是因為使用中文輸入法，又與別人進行同一行編輯時，容易會被別人的輸入打斷。
可以特別宣導，寫 HackPad 時可以與別人編輯不同行的文字。</p></blockquote></li>
<li>聯播網路狀況不佳時，或許可以引導會眾看看 HackPad 紀錄。</li>
</ol>
</li>
</ul>


<h2>其他：</h2>

<p>講者晚宴活動很棒，對於想與強者近距離接觸的我有很大收穫。不過我想如果有更多會眾來參加，可能就比較適合用「自助餐+大家自由移動」的方式，達到最大的 networking 效果 XD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Autocomplete dropdown with MarionetteJS]]></title>
    <link href="http://gracesusanchen.github.io/blog/2015/06/24/autocomplete-dropdown-with-marionettejs/"/>
    <updated>2015-06-24T21:27:37+08:00</updated>
    <id>http://gracesusanchen.github.io/blog/2015/06/24/autocomplete-dropdown-with-marionettejs</id>
    <content type="html"><![CDATA[<p>In this article, I will create <a href="https://twitter.github.io/typeahead.js/">typeahead</a> style dropdown using MarionetteJS.</p>

<!-- More -->


<p><strong>Note</strong>: Marionette is a Backbone.js library which includes a number of useful extended views. For more information on Marionette, I recommend starting with Ben McCormick&rsquo;s excellent introduction <a href="http://benmccormick.org/2014/12/02/the-case-for-marionette-js/">here</a>.</p>

<h2>Why use Marionette?</h2>

<p>There are several existing solutions for the autocomplete functionionality, such as <a href="https://jqueryui.com/autocomplete/">jQuery UI autocomplete</a>, and <a href="https://twitter.github.io/typeahead.js/">typeahead</a>. In particular, typeahead is both powerful and flexible. However, I have chosen Backbone.Marionette for the gentler learning curve.</p>

<p>Our autocomplete implemented with Marionette comes with the following features:</p>

<ol>
<li><p><strong>Datasource changes with user input.</strong></p>

<p>CollectionView can use any collection as the data source, and automatically listens to <code>add</code> and <code>destroy</code> events.</p></li>
<li><p><strong>Complex UI interaction within the dropdown menu.</strong></p>

<p>Use event hashes like you would in any other Backbone.Views.</p></li>
</ol>


<h2>Working Example</h2>

<p><img src="http://gracesusanchen.github.io/images/201506autocomplete.png" width="600"></p>

<p>Play around with it <a href="http://plnkr.co/9SX5OphViYSE1txQbEFR">here</a>.</p>

<h2>Walkthrough</h2>

<p>Let&rsquo;s divide our autocomplete into two sections:</p>

<ul>
<li>The input, which is controlled by a Backbone View.</li>
<li>The dropdown menu, which is controlled by a CollectionView.</li>
</ul>


<p>When a keyword is typed into the input, the dropdown menu is filtered. The key part of our implementation is this <a href="http://marionettejs.com/docs/marionette.collectionview.html#collectionviews-filter">filter method</a>.</p>

<h3>Filter Behavior</h3>

<p>I have separated the filter logic into a Marionette.Behavior, as shown below:</p>

<script src="https://gist.github.com/gracesusanchen/f6640993d2cc171f7230.js?file=FilterBehavior.js"></script>


<p>Notice we have instantiated the <code>onFilter</code> method. This method is triggered by the view&rsquo;s <code>filter</code> event.</p>

<p>Upon filtering, we reset the view&rsquo;s filter function based on the current search keyword. The filter function matches the keyword against fields specified by the <code>filter_keys</code> options. If at least one match is found, the item is shown.</p>

<h3>Views</h3>

<p>The rest of the code is quite straightforward. We define our CollectionView and make it filterable with default <code>filter_keys</code>, like so:</p>

<script src="https://gist.github.com/gracesusanchen/f6640993d2cc171f7230.js?file=ResultView.js"></script>


<p>The ItemView here is very simple (<em>line 3~7</em> above). In a real life project, we can use its own event hash to bind user interactions.</p>

<p>For our example, we are only interested in keyword changes. This event is handled by the main view, which is defined in the code below.</p>

<script src="https://gist.github.com/gracesusanchen/f6640993d2cc171f7230.js?file=MainView.js"></script>


<p>The main view listens <code>keyup</code> events on the search bar, and updates the dropdown menu by triggering <code>filter</code> events on the collection view.</p>

<h2>Wrapping Up</h2>

<p>For clarity, I have removed the code for highlighting in the above explanation, despite it a common feature in autocomplete. If you are interested in my implementation of highlighting, feel free to visit <a href="http://plnkr.co/9SX5OphViYSE1txQbEFR">the working example</a>.</p>
]]></content>
  </entry>
  
</feed>
